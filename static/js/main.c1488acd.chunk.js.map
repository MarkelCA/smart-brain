{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/brain.svg","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignUp/SignUp.js","components/SignIn/SignIn.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Navigation","onSignOut","id","className","onClick","Logo","max","glare","scale","maxGlare","src","brain","alt","ImageLinkForm","submitted","autoComplete","onSubmit","type","placeholder","value","Rank","FaceRecognition","boxes","imageUrl","key","console","log","map","box","leftCol","rightCol","topRow","bottomRow","style","top","right","left","bottom","SignUp","onLogin","name","href","onRegister","app","Clarifai","App","apiKey","props","calculateFaces","outputs","data","regions","calculateFaceLocations","face","region_info","bounding_box","image","document","getElementById","width","Number","height","left_col","right_col","top_row","bottom_row","displayFaceBox","a","setState","onSubmitted","event","preventDefault","form","target","searchField_value","querySelector","state","FACE_DETECT_MODEL","models","predict","then","catch","signIn","e","route","signOut","register","underDevelopment","this","signInCode","Fragment","signUpCode","homeCode","options","ParticlesConfig","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mYAUeA,EAVI,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACjB,OACI,qBAAKC,GAAG,aAAaC,UAAU,2DAA/B,SACI,mBAAGA,UAAU,4FAA4FC,QAASH,EAAlH,yB,QCHG,G,OAAA,IAA0B,mCCa1BI,EAVF,WACT,OACI,qBAAKH,GAAG,YAAYC,UAAU,sBAA9B,SACI,cAAC,IAAD,CAAOA,UAAU,mCAAmCG,IAAK,GAAIC,OAAK,EAACC,MAAO,KAAMC,SAAU,GAA1F,SACQ,qBAAKN,UAAU,oBAAoBO,IAAKC,EAAOC,IAAI,0BCyBxDC,G,OA9BO,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,UACjB,OACI,sBAAKZ,GAAG,kBAAkBC,UAAU,OAApC,UACI,mBAAGA,UAAU,oDAAb,kFACA,qBAAKD,GAAG,aAAaC,UAAU,2CAA/B,SACI,uBAAMA,UAAU,6BAA6BY,aAAa,MAAMC,SAAUF,EAA1E,UACA,uBAAOZ,GAAG,eAAee,KAAK,OAAOC,YAAY,6BAA6Bf,UAAU,iCAExF,uBAAOc,KAAK,SAASE,MAAM,SAASjB,GAAG,gBAAgBC,UAAU,sLCCtEiB,G,OATF,WACT,OACI,sBAAKlB,GAAG,OAAR,UACI,mBAAGA,GAAG,YAAYC,UAAU,qBAA5B,6CACA,mBAAGD,GAAG,aAAaC,UAAU,yBAA7B,qB,yBCiBGkB,G,OArBS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAEzBC,EAAM,EAEN,OADAC,QAAQC,IAAIJ,GAER,sBAAKpB,GAAG,WAAWC,UAAU,4DAA7B,UAEQ,qBAAKD,GAAG,cAAcQ,IAAKa,EAAWpB,UAAU,WAIhDmB,EAAMK,KAAI,SAASC,GACf,MAAgDA,GAAO,GAA/CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,OAAQC,EAAnC,EAAmCA,UACnC,OAAO,qBAAK9B,GAAG,MAAkBC,UAAU,eAAe8B,MAAO,CAACC,IAAKH,EAAQI,MAAOL,EAAUM,KAAMP,EAASQ,OAAQL,IAA7FR,aCmCnCc,G,OAjDA,SAAC,GAAwB,IAAvBtB,EAAsB,EAAtBA,SAAUuB,EAAY,EAAZA,QACvB,OACI,sBAAMrC,GAAG,cAAcC,UAAU,wDAAwDa,SAAUA,EAAnG,SACY,sBAAKb,UAAU,mFAAf,UACI,sBAAKA,UAAU,gDAAf,UACI,oBAAIA,UAAU,uCAAd,qBACA,uBACIc,KAAK,OACLd,UAAU,yDACVqC,KAAK,WACLtB,YAAY,cAEhB,uBACID,KAAK,OACLd,UAAU,yDACVqC,KAAK,QACLtB,YAAY,UAEhB,uBACID,KAAK,WACLd,UAAU,yDACVqC,KAAK,WACLtB,YAAY,aAChB,uBACID,KAAK,WACLd,UAAU,yDACVqC,KAAK,mBACLtB,YAAY,qBAEhB,wBACIhB,GAAG,cACHe,KAAK,SACLd,UAAU,0IAHd,4BAKA,mBAAGA,UAAU,cAAb,+DAGJ,sBAAKA,UAAU,gFAAf,qCAEI,mBAAGA,UAAU,2GAA2GsC,KAAK,YAAYrC,QAASmC,EAAlJ,oBAFJ,cCCTD,G,OAtCA,SAAC,GAA2B,IAA1BtB,EAAyB,EAAzBA,SAAU0B,EAAe,EAAfA,WACvB,OACI,sBAAMxC,GAAG,cAAcC,UAAU,wDAAwDa,SAAUA,EAAnG,SACY,sBAAKb,UAAU,mFAAf,UACI,sBAAKA,UAAU,gDAAf,UACI,oBAAIA,UAAU,uCAAd,qBACA,uBACIc,KAAK,OACLd,UAAU,yDACVqC,KAAK,QACLtB,YAAY,UAEhB,uBACID,KAAK,WACLd,UAAU,yDACVqC,KAAK,WACLtB,YAAY,aAEhB,wBACIhB,GAAG,cACHe,KAAK,SACLd,UAAU,0IAHd,oBAKA,mBAAGA,UAAU,cAAb,+DAGJ,sBAAKA,UAAU,gFAAf,uCAEI,mBAAGA,UAAU,2GAA2GsC,KAAK,YAAYrC,QAASsC,EAAlJ,sBAFJ,cCblBC,EAAM,IAAIC,IAASC,IAAI,CACzBC,OAAQ,qCAkHGD,E,kDA9Gf,WAAYE,GAAQ,IAAD,8BACf,cAAMA,IAQNC,eAAiB,YAIb,OAJiC,EAAlBC,QACK,GAAGC,KAAKC,QACFxB,IAAI,EAAKyB,yBAXxB,EAiBfA,uBAAyB,YAA4C,IAAZC,EAAW,EAAzCC,YAAeC,aAEhCC,EAAQC,SAASC,eAAe,eAChCC,EAAQC,OAAOJ,EAAMG,OACrBE,EAASD,OAAOJ,EAAMK,QAG5B,MAAO,CACHhC,QAASwB,EAAKS,SAAWH,EACzB7B,SAAU6B,EAASN,EAAKU,UAAYJ,EACpC5B,OAAQsB,EAAKW,QAAUH,EACvB7B,UAAW6B,EAAUR,EAAKY,WAAaJ,IA5BhC,EAgCfK,eAhCe,uCAgCE,WAAO5C,GAAP,SAAA6C,EAAA,sEACP,EAAKC,SAAS,CAAC9C,MAAQA,IADhB,2CAhCF,wDAqCf+C,YArCe,uCAqCD,WAAOC,GAAP,qBAAAH,EAAA,6DACVG,EAAMC,iBACAC,EAAOF,EAAMG,OACbC,EAAoBF,EAAKG,cAAc,iBAAiBxD,MAHpD,SAKJ,EAAKiD,SAAS,CAAC7C,SAAWmD,IALtB,OAOFnD,EAAa,EAAKqD,MAAlBrD,SACAsD,EAAsBjC,IAAtBiC,kBAERlC,EAAImC,OACDC,QAAQF,EAAmBtD,GAC3ByD,KAAK,EAAKhC,gBACVgC,KAAK,EAAKd,gBACVe,MAAMxD,QAAQC,KAdP,2CArCC,wDAsDfwD,OAAS,SAACC,GACNA,EAAEZ,iBACF,EAAKH,SAAS,CAACgB,MAAO,UAxDX,EA0DfC,QAAU,SAACF,GACPA,EAAEZ,iBACF,EAAKH,SAAS,CAACgB,MAAO,YA5DX,EA8DfE,SAAW,SAACH,GACRA,EAAEZ,iBACF,EAAKH,SAAS,CAACgB,MAAO,cA9D1B,EAAKR,MAAQ,CACTrD,SAAW,GACXD,MAAO,GACP8D,MAAO,UALI,E,0CAmEf,WACI,IAAMG,EAAmB,mBAAGrF,GAAG,oBAAoBC,UAAU,cAApC,wEACzB,EAA2BqF,KAAKZ,MAAzBrD,EAAP,EAAOA,SAAUD,EAAjB,EAAiBA,MACXmE,EAAa,eAAC,IAAMC,SAAP,WACMH,EACD,cAAC,EAAD,CAAQvE,SAAUwE,KAAKN,OAAQxC,WAAY8C,KAAKF,cAGlEK,EAAa,eAAC,IAAMD,SAAP,WACMH,EACD,cAAC,EAAD,CAAQvE,SAAUwE,KAAKN,OAAQ3C,QAASiD,KAAKH,aAG/DO,EAAW,eAAC,IAAMF,SAAP,WACG,cAAC,EAAD,CAAYzF,UAAWuF,KAAKH,UACvBE,EACL,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAezE,UAAW0E,KAAKnB,cAC/B,cAAC,EAAD,CAAiB/C,MAAQA,EAAQC,SAAaA,OAE1D6D,EAAUI,KAAKZ,MAAfQ,MACV,OACE,sBAAKjF,UAAU,MAAf,UACE,cAAC,IAAD,CAAWD,GAAG,cAAc2F,QAASC,IAOrB,WAAVV,EAAsBK,EAEJ,aAAVL,EAAuBO,EAAcC,S,GArG3CG,aCNHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASC,eAAe,SAM1BsC,K","file":"static/js/main.c1488acd.chunk.js","sourcesContent":["const Navigation = ({onSignOut}) => {\n    return (\n        <nav id='navigation' className='bg-white flex justify-end p-5 border-b-2 border-pink-500'>\n            <a className='cursor-pointer underline text-lg text-blue-900 hover:text-red-600 transition duration-200' onClick={onSignOut}>Sign out</a>\n\n        </nav>\n\n    )\n}\n\nexport default Navigation\n","export default __webpack_public_path__ + \"static/media/brain.4b0c3a48.svg\";","import Tilty from 'react-tilty'\nimport './Logo.css'\nimport brain from './brain.svg'\nconst Logo = () => {\n    return (\n        <div id=\"main-logo\" className='flex justify-center'>\n            <Tilty className=\"tilty w-40 h-40 bg-green-800 m-8\" max={45} glare scale={1.05} maxGlare={0.5}>\n                    <img className='w-full h-full p-4' src={brain} alt=\"smart-brain-logo\" />\n             </Tilty>\n        </div>\n    )\n}\n\nexport default Logo;\n","import './ImageLinkForm.css'\n\nconst ImageLinkForm = ({ submitted }) =>  {\n        return (\n            <div id=\"image-link-form\" className='z-10'>\n                <p className=\"text-lg m-3 text-white border-b-2 border-blue-300\"> This Magic Brain will detect faces in your pictures. Give it a try </p>\n                <div id=\"search-div\" className=\"sm:w-full md:w-3/5  m-auto shadow-xl p-4\">\n                    <form className=\"w-full flex justify-center\" autoComplete=\"off\" onSubmit={submitted}>\n                    <input id='search-field' type=\"text\" placeholder=\"Write here your image link\" className='p-2 mr-1 text-gray-600 w-3/4' />\n\n                    <input type='submit' value='Detect' id=\"search-button\" className=\"\n                        p-2\n                        m-auto\n                        w-1/4\n                        bg-blue-300\n                        hover:bg-pink-500\n                        hover:text-white\n                        transform\n                        hover:scale-110\n                        hover:translate-x-2\n                        active:scale-100\n                        active:border-0\n                        transition\n                        duration-10\n                    \" />\n\n                    </form>\n                </div>\n            </div>\n        )\n}\n\nexport default ImageLinkForm\n","import './Rank.css'\n\nconst Rank = () => {\n    return (\n        <div id=\"rank\">\n            <p id='rank-text' className='text-white text-xl'>Markel, your current Rank is...</p>\n            <p id='rank-value' className='text-pink-500 text-3xl'>#5</p>\n        </div>\n    )\n}\n\nexport default Rank\n","import './FaceRecognition.css'\n\nconst FaceRecognition = ({boxes, imageUrl}) => {\n\n    let key = 1\n        console.log(boxes)\n        return (\n            <div id='face-box' className='flex justify-center sm:w-full md:w-1/2 h-auto m-auto my-4'>\n                \n                    <img id='input-image' src={imageUrl}  className='w-full' />\n               \n                {\n\n                    boxes.map(function(box) {\n                        const { leftCol, rightCol, topRow, bottomRow} = box || {}\n                        return <div id=\"box\" key={key++} className='bounding-box' style={{top: topRow, right: rightCol, left: leftCol, bottom: bottomRow }}></div>\n                    })\n                }\n            </div>\n        )\n\n}\n\nexport default FaceRecognition\n\n","import './SignUp.css'\nconst SignUp = ({onSubmit, onLogin}) =>{\n    return (\n        <form id='signup-form' className=\"bg-grey-lighter flex flex-col sm:w-full h-auto m-auto\" onSubmit={onSubmit}>\n                    <div className=\"container max-w-sm mx-auto flex-1 flex flex-col items-center justify-center px-2\">\n                        <div className=\"px-6 py-8 rounded shadow-xl text-black w-full\">\n                            <h1 className=\"text-white mb-8 text-3xl text-center\">Sign up</h1>\n                            <input \n                                type=\"text\"\n                                className=\"block border border-grey-light w-full p-3 rounded mb-4\"\n                                name=\"fullname\"\n                                placeholder=\"Full Name\" />\n\n                            <input \n                                type=\"text\"\n                                className=\"block border border-grey-light w-full p-3 rounded mb-4\"\n                                name=\"email\"\n                                placeholder=\"Email\" />\n\n                            <input \n                                type=\"password\"\n                                className=\"block border border-grey-light w-full p-3 rounded mb-4\"\n                                name=\"password\"\n                                placeholder=\"Password\" />\n                            <input \n                                type=\"password\"\n                                className=\"block border border-grey-light w-full p-3 rounded mb-4\"\n                                name=\"confirm_password\"\n                                placeholder=\"Confirm Password\" />\n\n                            <button\n                                id='submit-form'\n                                type=\"submit\"\n                                className=\"w-full text-center py-3 rounded bg-blue-600 text-gray-800 hover:text-white focus:text-white hover:bg-green-dark focus:outline-none my-1\"\n                            >Create Account</button>\n                            <p className='development'>🔧 Not implemented yet. 🔧</p>\n                        </div>\n\n                        <div className=\"text-grey-dark mt-6 bg-white px-2 py-5 rounded-lg shadow-md text-black w-full\">\n                            Already have an account? \n                            <a className=\"text-lg no-underline border-b text-blue-700 transition duration-200 hover:border-blue-700 text-blue ml-2\" href=\"../login/\" onClick={onLogin}>\n                                Log in\n                            </a>.\n                        </div>\n                    </div>\n                </form>\n    )\n\n}\n\nexport default SignUp\n","import './SignIn.css'\nconst SignUp = ({onSubmit, onRegister}) =>{\n    return (\n        <form id='signin-form' className=\"bg-grey-lighter flex flex-col sm:w-full h-auto m-auto\" onSubmit={onSubmit}>\n                    <div className=\"container max-w-sm mx-auto flex-1 flex flex-col items-center justify-center px-2\">\n                        <div className=\"px-6 py-8 rounded shadow-xl text-black w-full\">\n                            <h1 className=\"text-white mb-8 text-3xl text-center\">Sign in</h1>\n                            <input \n                                type=\"text\"\n                                className=\"block border border-grey-light w-full p-3 rounded mb-4\"\n                                name=\"email\"\n                                placeholder=\"Email\" />\n\n                            <input \n                                type=\"password\"\n                                className=\"block border border-grey-light w-full p-3 rounded mb-4\"\n                                name=\"password\"\n                                placeholder=\"Password\" />\n\n                            <button\n                                id='submit-form'\n                                type=\"submit\"\n                                className=\"w-full text-center py-3 rounded bg-blue-600 text-gray-800 hover:text-white focus:text-white hover:bg-green-dark focus:outline-none my-1\"\n                            >Log in</button>\n                            <p className='development'>🔧 Not implemented yet. 🔧</p>\n                        </div>\n\n                        <div className=\"text-grey-dark mt-6 bg-white px-2 py-5 rounded-lg shadow-md text-black w-full\">\n                            You don't have an account? \n                            <a className=\"text-lg no-underline border-b text-blue-700 transition duration-200 hover:border-blue-700 text-blue ml-2\" href=\"../login/\" onClick={onRegister}>\n                                Register\n                            </a>.\n                        </div>\n                    </div>\n                </form>\n    )\n\n}\n\nexport default SignUp\n","import './App.css';\nimport React, { Component } from 'react'\nimport Clarifai, {FACE_DETECT_MODEL} from 'clarifai';\nimport Navigation from '../components/Navigation/Navigation'\nimport Logo from '../components/Logo/Logo'\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm'\nimport Rank from '../components/Rank/Rank'\nimport Particles from \"react-tsparticles\";\nimport ParticlesConfig from \"../particlesjs-config.json\"\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition'\nimport SignUp from '../components/SignUp/SignUp'\nimport SignIn from '../components/SignIn/SignIn'\n//import Credits from './components/Credits/Credits'\n\nconst app = new Clarifai.App({\n    apiKey: \"49a9260111a945d48126bac0a1d2cd3c\",\n});\n\nclass App extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n        imageUrl : '',\n        boxes: [],\n        route: 'signin'\n    }\n  }\n\n    calculateFaces = ({outputs: out}) => {\n        const regions = out[0].data.regions\n        const faceBoxes = regions.map(this.calculateFaceLocations)\n\n        return faceBoxes\n    }\n\n    // We destructure the region to get the bounding_box and we rename as box\n    calculateFaceLocations = ({region_info : {bounding_box : face}}) => {\n\n        const image = document.getElementById('input-image')\n        const width = Number(image.width)\n        const height = Number(image.height)\n\n\n        return {\n            leftCol: face.left_col * width,\n            rightCol: width - (face.right_col * width),\n            topRow: face.top_row * height,\n            bottomRow: height - (face.bottom_row * height)\n        }\n    }\n\n    displayFaceBox = async (boxes) => {\n        await this.setState({boxes : boxes})\n        //console.log(this.state.box)\n    }\n\n    onSubmitted = async (event) => {\n        event.preventDefault()\n        const form = event.target\n        const searchField_value = form.querySelector('#search-field').value\n\n        await this.setState({imageUrl : searchField_value}) // we use await as setState is asynchronous\n\n        const { imageUrl } = this.state\n        const { FACE_DETECT_MODEL } = Clarifai\n\n        app.models\n          .predict(FACE_DETECT_MODEL, imageUrl)\n          .then(this.calculateFaces)            // the response is passed as a parameter\n          .then(this.displayFaceBox)            // the calculated face location is passed as a parameter\n          .catch(console.log)                   // the error is passed as a paremeter\n\n    }\n    signIn = (e) => {\n        e.preventDefault()\n        this.setState({route: 'home'})\n    }\n    signOut = (e) => {\n        e.preventDefault()\n        this.setState({route: 'signin'})\n    }\n    register = (e) => {\n        e.preventDefault()\n        this.setState({route: 'register'})\n    }\n\n    render(){\n        const underDevelopment = <p id='under-development' className='development'>🔧 Site currently under development 🔧</p>\n        const {imageUrl, boxes } = this.state\n        const signInCode = <React.Fragment>\n                                {underDevelopment}\n                                <SignIn onSubmit={this.signIn} onRegister={this.register} />\n                            </React.Fragment>\n\n        const signUpCode = <React.Fragment>\n                                {underDevelopment}\n                                <SignUp onSubmit={this.signIn} onLogin={this.signOut}/>\n                            </React.Fragment>\n\n        const homeCode = <React.Fragment>\n                            <Navigation onSignOut={this.signOut}/>  \n                                {underDevelopment}\n                            <Logo />\n                            <Rank />\n                            <ImageLinkForm submitted={this.onSubmitted}/>\n                            <FaceRecognition boxes={ boxes } imageUrl = { imageUrl } />\n                        </React.Fragment>\n        const { route } = this.state\n      return (\n        <div className=\"App\">\n          <Particles id=\"tsparticles\" options={ParticlesConfig} />\n            {\n                /*\n                 * if (signin) signInCode\n                 * else if (register) SignUpCode\n                 * else homeCode\n                 */\n                route === 'signin' ?  signInCode : \n                    (\n                        route === 'register' ? signUpCode  : homeCode\n                    )\n            }\n        </div>\n          \n      );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}